@model MiniaturesGallery.Models.Post

@using MiniaturesGallery.Extensions
@using MiniaturesGallery.Models
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@functions{
    private async Task PresentCommentsRecursively(ICollection<Comment> comments)
    {
    @foreach (var comm in comments)
    {
        <div class="card border">
            <div class="card-header"><h3>@if(comm.User != null){<p>@comm.User.UserName</p>
                    } else{
                        <p>@Localizer["Guest"]</p>}</h3></div>
                <div class="card-body">
                    <p class="card-text">@comm.Body</p>
                </div>             
            </div>
        <div class="">
            @comm.CrateDate [<a data-bs-toggle="collapse" href="#collapseAddComment_@comm.ID">@Localizer["Reply"]</a>] 
            @if(comm.Comments != null){<div style="display: inline;">[<a data-bs-toggle="collapse" href="#collapseShowCommentsOf_@comm.ID">@Localizer["Show Replies"] (@comm.Comments.Count())</a>]</div>
            }
        </div>
        <div class="col-md-4 ms-5 m-2 collapse" id="collapseAddComment_@comm.ID">
            <form asp-action="Create" asp-controller="Comments">
                <input hidden name="@(nameof(Comment.PostID))" value="@comm.PostID" />
                <input hidden name="@(nameof(Comment.UserID))" value="@(User.GetLoggedInUserId<string>())" />
                <input hidden name="@(nameof(Comment.CommentID))" value="@comm.ID" />
                <div class="">
                    <label class="control-label">@Localizer["Add Comment:"]</label>
                    <input name="@(nameof(Comment.Body))" class="form-control" />
                </div>
                <div class="d-flex justify-content-center mt-2">
                    <input type="submit" value="@Localizer["Create"]" class="btn btn-primary" />
                </div>
            </form>
        </div>
        if (comm.Comments != null)
        {
            <div class="collapse ms-5" id="collapseShowCommentsOf_@comm.ID">
                @{
                    PresentCommentsRecursively(comm.Comments);
                }
            </div>
        }
    }
    }
}

<div>
    <div class="text-center align-items-center">
        <h1 style="display: inline;">@Html.DisplayFor(model => model.Topic)</h1>
        @if (User.GetLoggedInUserId<string>() == Model.UserID)
        {
            <h4 style="display: inline;">
                [<a asp-action="Edit" asp-route-id="@Model?.ID">@Localizer["Edit"]</a>]
            </h4>       
            <h4 style="display: inline;">
                [<a asp-action="Delete" asp-route-id="@Model?.ID" class="text-danger">@Localizer["Delete"]</a>]
            </h4>
        }
    </div>
    <hr />
    <div class="row">
        <div id="carouselImages" class="carousel slide carousel-fade carousel">
            <div class="carousel-inner">
                @foreach (var att in Model.Attachments)
                {
                    string activeAttribute = "";
                    if (att == Model.Attachments.First())
                        activeAttribute = "active";
                    <div class="carousel-item @activeAttribute d-flex align-items-center justify-content-center" style="height: 500px">
                        <a data-bs-toggle="modal" href="#imageModal_@att.ID">
                            <img src="~/Files/@att.FullFileName" alt="@att.FileName" class="d-block w-80" style="max-height: 500px">
                        </a>
                    </div>

                    <div class="modal fade" tabindex="-1" aria-hidden="true" id="imageModal_@att.ID">
                        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-xl">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">@att.FileName</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="@Localizer["Close"]"></button>
                                </div>
                                <div class="modal-body d-flex align-items-center justify-content-center">
                                    <img src="~/Files/@att.FullFileName" alt="@att.FileName">
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Close"]</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="d-flex justify-content-center">
                @{
                    int iterator = 0;
                    foreach (var att in Model.Attachments)
                    {
                        string cssClass = "";
                        string cssAria = "";
                        if (att == Model.Attachments.First())
                        {
                            cssClass = "active";
                            cssAria = "true";
                        }

                        <button type="button" data-bs-target="#carouselImages" data-bs-slide-to="@iterator" class="@cssClass" aria-current="@cssAria">
                            <img src="~/Files/@att.FullFileName" alt="@att.FileName" class="d-block" style="max-height: 50px; max-width: 50px">
                        </button>
                        iterator++;
                    }
                }
            </div>
            <button class="carousel-control-prev text-white" type="button" data-bs-target="#carouselImages" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">@Localizer["Previous"]</span>
            </button>
            <button class="carousel-control-next text-white" type="button" data-bs-target="#carouselImages" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">@Localizer["Next"]</span>
            </button>
        </div>

        @{
            string action = "Create", checked5 = "", checked4 = "", checked3 = "", checked2 = "", checked1 = "";
            int rating = (int)Math.Floor(Model.Rating);
            if (Model.Rates.Any())
            {
                action = "Edit";
                rating = Model.Rates.First().Rating;
            }
            switch (rating)
            {
                case 1:
                    checked1 = "checked";
                    break;
                case 2:
                    checked2 = "checked";
                    break;
                case 3:
                    checked3 = "checked";
                    break;
                case 4:
                    checked4 = "checked";
                    break;
                case 5:
                    checked5 = "checked";
                    break;
            }
        }
        <form asp-action="@action" asp-controller="Rates" method="post" asp-route-id="@(Model.Rates.Any() ? Model.Rates.First().ID : 0)">
            <div class="text-center">
                @Localizer["Rating"]: @Model.Rating.ToString("n2") (@Model.NoOfRates.ToString())
            </div>
            <div class="rating justify-content-center">
                @if (Model.Rates.Any())
                {
                    <input hidden name="@(nameof(Rate.ID))" value="@Model.Rates.First().ID" />
                }
                <input hidden name="@(nameof(Rate.PostID))" value="@Model.ID" />
                <input hidden name="@(nameof(Rate.UserID))" value="@(User.GetLoggedInUserId<string>())" />
                <input type="radio" name="rating" value="5" id="5" @checked5 onclick="$('#collapseSubmitRateButton').collapse('show');">
                <label for="5">☆</label>
                <input type="radio" name="rating" value="4" id="4" @checked4 onclick="$('#collapseSubmitRateButton').collapse('show');">
                <label for="4">☆</label>
                <input type="radio" name="rating" value="3" id="3" @checked3 onclick="$('#collapseSubmitRateButton').collapse('show');">
                <label for="3">☆</label>
                <input type="radio" name="rating" value="2" id="2" @checked2 onclick="$('#collapseSubmitRateButton').collapse('show');">
                <label for="2">☆</label>
                <input type="radio" name="rating" value="1" id="1" @checked1 onclick="$('#collapseSubmitRateButton').collapse('show');">
                <label for="1">☆</label>
            </div>
            <div class="text-center mb-2">
                <input type="submit" value="@Localizer["Submit"]" class="btn btn-primary btn-sm collapse" id="collapseSubmitRateButton" />
            </div>
        </form>

        <hr />
        <h6>@Html.DisplayFor(model => model.User.UserName)</h6>
        <h6>@Html.DisplayFor(model => model.CrateDate)</h6>
        <h4 style="white-space: pre-line">@Html.DisplayFor(model => model.Text)</h4>

        <hr />
        <div class="col-md-12">
            <h5>@Localizer["Comments"]:</h5>
            [<a data-bs-toggle="collapse" href="#collapseAddComment">@Localizer["Add Comment"]</a>]
            <div class="col-md-4 m-2 collapse" id="collapseAddComment">
                <form asp-action="Create" asp-controller="Comments">
                    <input hidden name="@(nameof(Comment.PostID))" value="@Model.ID" />
                    <input hidden name="@(nameof(Comment.UserID))" value="@(User.GetLoggedInUserId<string>())" />
                    <input hidden name="@(nameof(Comment.CommentID))" value="" />
                    <div class="">
                        <label class="control-label">@Localizer["Add Comment"]:</label>
                        <input name="@(nameof(Comment.Body))" class="form-control" />
                    </div>
                    <div class="d-flex justify-content-center mt-2">
                        <input type="submit" value="@Localizer["Create"]" class="btn btn-primary" />
                    </div>
                </form>
            </div>
            @{PresentCommentsRecursively(Model.Coments);}
        </div>
    </div>
</div>
